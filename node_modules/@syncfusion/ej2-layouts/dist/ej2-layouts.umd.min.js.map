{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        window.addEventListener('resize', this.reportWindowSize.bind(this), true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        if (this.checkBlazor()) {\n            for (var j = 0; j < this.element.children.length; j++) {\n                if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                    this.allBars.push(this.element.children[j]);\n                }\n            }\n        }\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    separator = this.allBars[i];\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        setTimeout(function () { _this.updateSplitterSize(true); }, 200);\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (this.paneSettings[i].min !== null) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // tslint:disable-next-line:no-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // tslint:disable-next-line:no-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        // tslint:disable-next-line\n        var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n        if (compilerFn) {\n            for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                var item = compilerFn_1[_i];\n                templateElements.push(item);\n            }\n            append([].slice.call(templateElements), appendElement);\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // tslint:disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                    this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n            this.renderReactTemplates();\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                    this.renderReactTemplates();\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.updatePanelsDynamically(this.panels);\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","window","addEventListener","reportWindowSize","bind","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","updateSplitterSize","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","minValue","paneMinRange","updatePane","flexPane","convertPixelToNumber","toString","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","convertedValue","percentage","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","scrollY","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","clearTemplate","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","drag","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","compilerFn","compilerFn_1","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","updateBlazorTemplate","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","updatedHeight","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","_loop_6","this_4","localPanel","pan"],"mappings":"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"}