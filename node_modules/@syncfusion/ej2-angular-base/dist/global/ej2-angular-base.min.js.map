{"version":3,"file":"ej2-angular-base.min.js","sources":["../../src/util.js","../../src/template.js","../../src/complex-array-base.js","../../src/component-base.js","../../src/form-base.js"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Angular Utility Module\n */\n/* tslint:disable */\nexport function applyMixins(derivedClass, baseClass) {\n    baseClass.forEach(function (baseClass) {\n        Object.getOwnPropertyNames(baseClass.prototype).forEach(function (name) {\n            if (!derivedClass.prototype.hasOwnProperty(name) || baseClass.isFormBase) {\n                derivedClass.prototype[name] = baseClass.prototype[name];\n            }\n        });\n    });\n}\n/* tslint:disable */\nexport function ComponentMixins(baseClass) {\n    return function (derivedClass) {\n        applyMixins(derivedClass, baseClass);\n    };\n}\n/**\n * @private\n */\nexport function registerEvents(eventList, obj, direct) {\n    var ngEventsEmitter = {};\n    if (eventList && eventList.length) {\n        for (var _i = 0, eventList_1 = eventList; _i < eventList_1.length; _i++) {\n            var event_1 = eventList_1[_i];\n            if (direct === true) {\n                obj.propCollection[event_1] = new EventEmitter(false);\n                obj[event_1] = obj.propCollection[event_1];\n            }\n            else {\n                ngEventsEmitter[event_1] = new EventEmitter(false);\n            }\n        }\n        if (direct !== true) {\n            obj.setProperties(ngEventsEmitter, true);\n        }\n    }\n}\n/**\n * @private\n */\nexport function clearTemplate(_this, templateNames, index) {\n    var regTemplates = Object.keys(_this.registeredTemplate);\n    if (regTemplates.length) {\n        /* istanbul ignore next */\n        var regProperties = templateNames && templateNames.filter(function (val) {\n            return (/\\./g.test(val) ? false : true);\n        });\n        for (var _i = 0, _a = (regProperties && regProperties || regTemplates); _i < _a.length; _i++) {\n            var registeredTemplate = _a[_i];\n            /* istanbul ignore next */\n            if (index && index.length) {\n                for (var e = 0; e < index.length; e++) {\n                    for (var m = 0; m < _this.registeredTemplate.template.length; m++) {\n                        var value = _this.registeredTemplate.template[m].rootNodes[0];\n                        if (value === index[e]) {\n                            var rt = _this.registeredTemplate[registeredTemplate];\n                            rt[m].destroy();\n                        }\n                    }\n                }\n            }\n            else {\n                for (var _b = 0, _c = _this.registeredTemplate[registeredTemplate]; _b < _c.length; _b++) {\n                    var rt = _c[_b];\n                    if (!rt.destroyed) {\n                        if (rt._view) {\n                            var pNode = rt._view.renderer.parentNode(rt.rootNodes[0]);\n                            if (!isNullOrUndefined(pNode)) {\n                                for (var m = 0; m < rt.rootNodes.length; m++) {\n                                    pNode.appendChild(rt.rootNodes[m]);\n                                }\n                            }\n                        }\n                        rt.destroy();\n                    }\n                }\n            }\n            delete _this.registeredTemplate[registeredTemplate];\n        }\n    }\n    var _loop_1 = function (tagObject) {\n        if (tagObject.instance) {\n            /* istanbul ignore next */\n            tagObject.instance.clearTemplate((templateNames && templateNames.filter(function (val) {\n                return (new RegExp(tagObject.name).test(val) ? true : false);\n            })));\n        }\n    };\n    for (var _d = 0, _e = _this.tagObjects; _d < _e.length; _d++) {\n        var tagObject = _e[_d];\n        _loop_1(tagObject);\n    }\n}\n/**\n * To set value for the nameSpace in desired object.\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @return {void}\n * @private\n */\nexport function setValue(nameSpace, value, object) {\n    var keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    /* istanbul ignore next */\n    var fromObj = object || {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (i + 1 === keys.length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (fromObj[key] === undefined) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return fromObj;\n}\n","import { setTemplateEngine, getTemplateEngine } from '@syncfusion/ej2-base';\nimport { setValue, getValue } from '@syncfusion/ej2-base';\nvar stringCompiler = getTemplateEngine();\n/**\n * Angular Template Compiler\n */\nexport function compile(templateEle, helper) {\n    if (typeof templateEle === 'string') {\n        return stringCompiler(templateEle, helper);\n    }\n    else {\n        var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;\n        var pName_1 = templateEle.elementRef.nativeElement.propName;\n        //tslint:disable-next-line        \n        return function (data, component, propName) {\n            var context = { $implicit: data };\n            /* istanbul ignore next */\n            var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;\n            var viewRef = conRef.createEmbeddedView(templateEle, context);\n            viewRef.markForCheck();\n            /* istanbul ignore next */\n            var viewCollection = (component && component.registeredTemplate) ?\n                component.registeredTemplate : getValue('currentInstance.registeredTemplate', conRef);\n            propName = (propName && component.registeredTemplate) ? propName : pName_1;\n            if (typeof viewCollection[propName] === 'undefined') {\n                viewCollection[propName] = [];\n            }\n            viewCollection[propName].push(viewRef);\n            return viewRef.rootNodes;\n        };\n    }\n}\n/**\n * Property decorator for angular.\n */\nexport function Template(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: setter(key),\n            get: getter(key, defaultValue),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, propertyDescriptor);\n    };\n}\nfunction setter(key) {\n    return function (val) {\n        if (val === undefined) {\n            return;\n        }\n        setValue(key + 'Ref', val, this);\n        if (typeof val !== 'string') {\n            val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;\n            val.elementRef.nativeElement.propName = key;\n        }\n        else {\n            if (this.saveChanges) {\n                this.saveChanges(key, val, undefined);\n                this.dataBind();\n            }\n        }\n    };\n}\nfunction getter(key, defaultValue) {\n    return function () {\n        /* istanbul ignore next */\n        return getValue(key + 'Ref', this) || defaultValue;\n    };\n}\n//tslint:disable-next-line\nsetTemplateEngine({ compile: compile });\n","import { getValue, setValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { clearTemplate, registerEvents } from './util';\nvar ComplexBase = /** @class */ (function () {\n    function ComplexBase() {\n        this.hasChanges = false;\n        this.propCollection = {};\n        this.dataSource = {};\n        this.tags = [];\n        this.tagObjects = [];\n    }\n    ComplexBase.prototype.ngOnInit = function () {\n        this.registeredTemplate = {};\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var objInstance = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this);\n            if (objInstance) {\n                this.tagObjects.push({ instance: objInstance, name: tag });\n            }\n        }\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _b = 0, templateProperties_1 = templateProperties; _b < templateProperties_1.length; _b++) {\n            var tempName = templateProperties_1[_b];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n        // Angular 9 compatibility to overcome ngOnchange not get triggered issue\n        // To Update properties to \"this.propCollection\"\n        var propList = Object.keys(this);\n        /* istanbul ignore next */\n        if (this.directivePropList) {\n            for (var k = 0; k < this.directivePropList.length; k++) {\n                var dirPropName = this.directivePropList[k];\n                if (propList.indexOf(dirPropName) !== -1) {\n                    setValue(dirPropName, getValue(dirPropName, this), this.propCollection);\n                }\n            }\n            this.hasChanges = true;\n        }\n    };\n    ComplexBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this, true);\n    };\n    ComplexBase.prototype.ngOnChanges = function (changes) {\n        for (var _i = 0, _a = Object.keys(changes); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            var changedVal = changes[propName];\n            this.propCollection[propName] = changedVal.currentValue;\n        }\n        this.isUpdated = false;\n        this.hasChanges = true;\n    };\n    /* istanbul ignore next */\n    ComplexBase.prototype.clearTemplate = function (templateNames) {\n        clearTemplate(this, templateNames);\n    };\n    ComplexBase.prototype.getProperties = function () {\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            this.propCollection[tagObject.name] = tagObject.instance.getProperties();\n        }\n        return this.propCollection;\n    };\n    ComplexBase.prototype.isChanged = function () {\n        var result = this.hasChanges;\n        if (!isNullOrUndefined(this.propCollection[this.property])) {\n            var tempProps = this.propCollection[this.property];\n            var props = Object.keys(tempProps[0]);\n            for (var d = 0; d < props.length; d++) {\n                if (!isNullOrUndefined(this.propCollection[props[d]])) {\n                    var val = getValue(props[d], this);\n                    var propVal = this.propCollection[this.property][0][props[d]];\n                    if (!isNullOrUndefined(val) && this.propCollection[props[d]] !== val\n                        && propVal !== val) {\n                        this.propCollection[this.property][0][props[d]] = val;\n                        this.propCollection[props[d]] = val;\n                        this.hasChanges = true;\n                        this.isUpdated = false;\n                    }\n                }\n            }\n        }\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.instance.hasChanges;\n        }\n        return result || this.hasChanges;\n    };\n    ComplexBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        // For angular 9 compatibility\n        // ngOnchange hook not get triggered for copmplex directive\n        // Due to this, we have manually set template properties v alues once we get template property reference\n        for (var _i = 0, templateProperties_2 = templateProperties; _i < templateProperties_2.length; _i++) {\n            var tempName = templateProperties_2[_i];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n    };\n    ComplexBase.prototype.ngAfterViewChecked = function () {\n        /* istanbul ignore next */\n        if (this.isUpdated) {\n            this.hasChanges = false;\n        }\n    };\n    return ComplexBase;\n}());\nexport { ComplexBase };\nvar ArrayBase = /** @class */ (function () {\n    function ArrayBase(propertyName) {\n        this.list = [];\n        this.hasChanges = false;\n        this.propertyName = propertyName;\n    }\n    ArrayBase.prototype.ngOnInit = function () {\n        this.isInitChanges = true;\n    };\n    ArrayBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var index = 0;\n        /* istanbul ignore next */\n        this.list = this.children.map(function (child) {\n            child.dirIndex = index++;\n            child.property = _this.propertyName;\n            return child;\n        });\n        this.hasChanges = true;\n    };\n    ArrayBase.prototype.getProperties = function () {\n        var onlyProp = [];\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            onlyProp.push(item.getProperties());\n        }\n        return onlyProp;\n    };\n    ArrayBase.prototype.isChanged = function () {\n        var _this = this;\n        var result = false;\n        var index = 0;\n        var isSourceChanged = false;\n        // tslint:disable-next-line\n        var childrenDataSource = this.children.map(function (child) {\n            return child;\n        });\n        /* istanbul ignore next */\n        if (this.list.length === this.children.length) {\n            for (var i = 0; i < this.list.length; i++) {\n                if (this.list[i].propCollection.dataSource) {\n                    if (this.list[i].dataSource && this.list[i].propCollection.dataSource !== this.list[i].dataSource) {\n                        this.list[i].propCollection.dataSource = this.list[i].dataSource;\n                        this.list[i].hasChanges = true;\n                    }\n                    isSourceChanged = (JSON.stringify(this.list[i].propCollection.dataSource) !==\n                        JSON.stringify(childrenDataSource[i].propCollection.dataSource));\n                }\n            }\n        }\n        this.hasNewChildren = (this.list.length !== this.children.length || isSourceChanged) ? true : null;\n        if (this.hasNewChildren) {\n            this.list = this.children.map(function (child) {\n                child.dirIndex = index++;\n                child.property = _this.propertyName;\n                return child;\n            });\n        }\n        /* istanbul ignore end */\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.hasChanges;\n        }\n        return !!this.list.length && result;\n    };\n    ArrayBase.prototype.clearTemplate = function (templateNames) {\n        var _this = this;\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.clearTemplate(templateNames && templateNames.map(function (val) {\n                return new RegExp(_this.propertyName).test(val) ? val.replace(_this.propertyName + '.', '') : val;\n            }));\n        }\n    };\n    ArrayBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        for (var i = 0; i < this.list.length; i++) {\n            this.list[i].isUpdated = true;\n        }\n    };\n    ArrayBase.prototype.ngAfterViewInit = function () {\n        this.isInitChanges = false;\n    };\n    return ArrayBase;\n}());\nexport { ArrayBase };\n","/**\n * Angular Component Base Module\n */\nimport { getValue, isUndefined, setValue, isNullOrUndefined, attributes, createElement } from '@syncfusion/ej2-base';\nimport { EventEmitter } from '@angular/core';\nimport { clearTemplate, registerEvents } from './util';\nvar SVG_REG = /^svg|^path|^g/;\nvar ComponentBase = /** @class */ (function () {\n    function ComponentBase() {\n        this.isProtectedOnChange = true;\n    }\n    ComponentBase.prototype.saveChanges = function (key, newValue, oldValue) {\n        if (this.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.finalUpdate();\n        // tslint:disable-next-line:no-any\n        var changeTime = setTimeout(this.dataBind.bind(this));\n        var clearUpdate = function () {\n            clearTimeout(changeTime);\n        };\n        this.finalUpdate = clearUpdate;\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngOnInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempOnThis = isTempRef || this;\n        tempOnThis.registeredTemplate = {};\n        tempOnThis.ngBoundedEvents = {};\n        tempOnThis.isAngular = true;\n        /* istanbul ignore next */\n        if (isTempRef) {\n            this.tags = isTempRef.tags;\n        }\n        tempOnThis.tags = this.tags || [];\n        tempOnThis.complexTemplate = this.complexTemplate || [];\n        tempOnThis.tagObjects = [];\n        tempOnThis.ngAttr = this.getAngularAttr(tempOnThis.element);\n        /* istanbul ignore next */\n        tempOnThis.createElement = function (tagName, prop) {\n            //tslint:disable-next-line\n            var ele = tempOnThis.srenderer ? tempOnThis.srenderer.createElement(tagName) : createElement(tagName);\n            if (typeof (prop) === 'undefined') {\n                return ele;\n            }\n            ele.innerHTML = (prop.innerHTML ? prop.innerHTML : '');\n            if (prop.className !== undefined) {\n                ele.className = prop.className;\n            }\n            if (prop.id !== undefined) {\n                ele.id = prop.id;\n            }\n            if (prop.styles !== undefined) {\n                ele.setAttribute('style', prop.styles);\n            }\n            if (tempOnThis.ngAttr !== undefined) {\n                ele.setAttribute(tempOnThis.ngAttr, '');\n            }\n            if (prop.attrs !== undefined) {\n                attributes(ele, prop.attrs);\n            }\n            return ele;\n        };\n        for (var _i = 0, _a = tempOnThis.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var tagObject = {\n                instance: getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tempOnThis),\n                name: tag\n            };\n            tempOnThis.tagObjects.push(tagObject);\n        }\n        var complexTemplates = Object.keys(tempOnThis);\n        complexTemplates = complexTemplates.filter(function (val) {\n            return /Ref$/i.test(val) && /\\_/i.test(val);\n        });\n        for (var _b = 0, complexTemplates_1 = complexTemplates; _b < complexTemplates_1.length; _b++) {\n            var tempName = complexTemplates_1[_b];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, tempOnThis), val);\n            tempOnThis.setProperties(val, true);\n        }\n    };\n    ComponentBase.prototype.getAngularAttr = function (ele) {\n        var attributes = ele.attributes;\n        var length = attributes.length;\n        var ngAr;\n        for (var i = 0; i < length; i++) {\n            /* istanbul ignore next */\n            if (/_ngcontent/g.test(attributes[i].name)) {\n                ngAr = attributes[i].name;\n            }\n        }\n        return ngAr;\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngAfterViewInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempAfterViewThis = isTempRef || this;\n        var regExp = /ejs-tab|ejs-accordion/g;\n        /* istanbul ignore next */\n        if (regExp.test(tempAfterViewThis.ngEle.nativeElement.outerHTML)) {\n            tempAfterViewThis.ngEle.nativeElement.style.visibility = 'hidden';\n        }\n        /**\n         * Root level template properties are not getting rendered,\n         * Due to ngonchanges not get triggered.\n         * so that we have set template value for root level template properties,\n         * for example: refer below syntax\n         * ```html\n         * <ejs-grid>\n         * <e-column></e-column>\n         * <ng-template #editSettingsTemplate></ng-template>\n         * </ejs-grid>\n         * ```\n         */\n        var templateProperties = Object.keys(tempAfterViewThis);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _i = 0, templateProperties_1 = templateProperties; _i < templateProperties_1.length; _i++) {\n            var tempName = templateProperties_1[_i];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName + 'Ref', tempAfterViewThis), tempAfterViewThis);\n        }\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        setTimeout(function () {\n            /* istanbul ignore else  */\n            if (typeof window !== 'undefined') {\n                tempAfterViewThis.appendTo(tempAfterViewThis.element);\n                tempAfterViewThis.ngEle.nativeElement.style.visibility = '';\n            }\n        });\n    };\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngOnDestroy = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempOnDestroyThis = isTempRef || this;\n        /* istanbul ignore else  */\n        if (typeof window !== 'undefined' && tempOnDestroyThis.element.classList.contains('e-control')) {\n            tempOnDestroyThis.destroy();\n            tempOnDestroyThis.clearTemplate(null);\n        }\n    };\n    //tslint:disable-next-line\n    ComponentBase.prototype.clearTemplate = function (templateNames, index) {\n        clearTemplate(this, templateNames, index);\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngAfterContentChecked = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempAfterContentThis = isTempRef || this;\n        for (var _i = 0, _a = tempAfterContentThis.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            if (!isUndefined(tagObject.instance) &&\n                (tagObject.instance.isInitChanges || tagObject.instance.hasChanges || tagObject.instance.hasNewChildren)) {\n                if (tagObject.instance.isInitChanges) {\n                    var propObj = {};\n                    // For angular 9 compatibility\n                    // Not able to get complex directive properties reference ni Onint hook\n                    // So we have constructed property here and used\n                    var complexDirProps = void 0;\n                    var list = getValue('instance.list', tagObject);\n                    tagObject.instance.moduleName = tempAfterContentThis.getModuleName();\n                    if (list && list.length) {\n                        complexDirProps = list[0].directivePropList;\n                    }\n                    var skip = true;\n                    if (tempAfterContentThis.getModuleName && tempAfterContentThis.getModuleName() === 'gantt') {\n                        skip = false;\n                    }\n                    if (complexDirProps && skip && complexDirProps.indexOf(tagObject.instance.propertyName) === -1) {\n                        var compDirPropList = Object.keys(tagObject.instance.list[0].propCollection);\n                        for (var h = 0; h < tagObject.instance.list.length; h++) {\n                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName] = [];\n                            var obj = {};\n                            for (var k = 0; k < compDirPropList.length; k++) {\n                                var complexPropName = compDirPropList[k];\n                                obj[complexPropName] = tagObject.instance.list[h].propCollection[complexPropName];\n                            }\n                            for (var i = 0; i < tagObject.instance.list[h].tags.length; i++) {\n                                var tag = tagObject.instance.list[h].tags[i];\n                                var childObj = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tagObject.instance.list[h]);\n                                if (childObj) {\n                                    var innerchildObj = tagObject.instance.list[h]['child' + tag.substring(0, 1).toUpperCase() + tag.substring(1)];\n                                    if (innerchildObj) {\n                                        for (var j = 0; j < innerchildObj.list.length; j++) {\n                                            var innerTag = innerchildObj.list[0].tags[0];\n                                            if (innerTag) {\n                                                var innerchildTag = getValue('child' + innerTag.substring(0, 1).toUpperCase() + innerTag.substring(1), innerchildObj.list[j]);\n                                                if (innerchildTag) {\n                                                    innerchildObj.list[j].tagObjects.push({ instance: innerchildTag, name: innerTag });\n                                                }\n                                            }\n                                        }\n                                    }\n                                    tagObject.instance.list[h].tagObjects.push({ instance: childObj, name: tag });\n                                }\n                            }\n                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName].push(obj);\n                        }\n                    }\n                    // End angular 9 compatibility\n                    propObj[tagObject.name] = tagObject.instance.getProperties();\n                    tempAfterContentThis.setProperties(propObj, tagObject.instance.isInitChanges);\n                }\n                else {\n                    /* istanbul ignore next */\n                    var oldProbLength = tempAfterContentThis[tagObject.name].length;\n                    var newPropLendgth = tagObject.instance.list.length;\n                    if (oldProbLength !== newPropLendgth) {\n                        tempAfterContentThis[tagObject.name] = tagObject.instance.list;\n                    }\n                    for (var _b = 0, _c = tagObject.instance.list; _b < _c.length; _b++) {\n                        var list = _c[_b];\n                        var curIndex = tagObject.instance.list.indexOf(list);\n                        var curChild = getValue(tagObject.name, tempAfterContentThis)[curIndex];\n                        if (curChild !== undefined && curChild.setProperties !== undefined) {\n                            if (tempAfterContentThis.getModuleName() === 'DashboardLayout') {\n                                curChild.setProperties(list.getProperties(), true);\n                            }\n                            else {\n                                curChild.setProperties(list.getProperties());\n                            }\n                        }\n                        list.isUpdated = true;\n                    }\n                }\n            }\n        }\n    };\n    ComponentBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this);\n    };\n    ComponentBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = getValue(prop, this.properties);\n        if (oldVal === newVal) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    ComponentBase.prototype.addTwoWay = function (propList) {\n        var _this = this;\n        var _loop_1 = function (prop) {\n            getValue(prop, this_1);\n            Object.defineProperty(this_1, prop, {\n                get: function () {\n                    return getValue(prop, _this.properties);\n                },\n                set: function (newVal) { return _this.twoWaySetter(newVal, prop); }\n            });\n            setValue(prop + 'Change', new EventEmitter(), this_1);\n        };\n        var this_1 = this;\n        for (var _i = 0, propList_1 = propList; _i < propList_1.length; _i++) {\n            var prop = propList_1[_i];\n            _loop_1(prop);\n        }\n    };\n    ComponentBase.prototype.addEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            if (!this.ngBoundedEvents[eventName]) {\n                this.ngBoundedEvents[eventName] = new Map();\n            }\n            this.ngBoundedEvents[eventName].set(handler, eventObj.subscribe(handler));\n        }\n    };\n    ComponentBase.prototype.removeEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            this.ngBoundedEvents[eventName].get(handler).unsubscribe();\n        }\n    };\n    ComponentBase.prototype.trigger = function (eventName, eventArgs, success) {\n        var eventObj = getValue(eventName, this);\n        var prevDetection = this.isProtectedOnChange;\n        this.isProtectedOnChange = false;\n        if (eventArgs) {\n            eventArgs.name = eventName;\n        }\n        if (!isUndefined(eventObj)) {\n            eventObj.next(eventArgs);\n        }\n        var localEventObj = getValue('local' + eventName.charAt(0).toUpperCase() + eventName.slice(1), this);\n        if (!isUndefined(localEventObj)) {\n            localEventObj.call(this, eventArgs);\n        }\n        this.isProtectedOnChange = prevDetection;\n        /* istanbul ignore else  */\n        if (success) {\n            success.call(this, eventArgs);\n        }\n    };\n    return ComponentBase;\n}());\nexport { ComponentBase };\n","import { getValue, setValue, isNullOrUndefined, isObject } from '@syncfusion/ej2-base';\n/**\n * Angular Form Base Module\n */\nvar FormBase = /** @class */ (function () {\n    function FormBase() {\n    }\n    FormBase.prototype.propagateChange = function (_) { return; };\n    FormBase.prototype.propagateTouch = function () { return; };\n    FormBase.prototype.localChange = function (e) {\n        //tslint:disable-next-line\n        var value = (e.checked === undefined ? e.value : e.checked);\n        this.objCheck = isObject(value);\n        if (this.isUpdated === true) {\n            this.angularValue = this.oldValue;\n        }\n        if (this.objCheck === true) {\n            this.duplicateValue = JSON.stringify(value);\n            this.duplicateAngularValue = JSON.stringify(this.angularValue);\n            if (this.duplicateValue !== this.duplicateAngularValue && this.propagateChange !== undefined && value !== undefined) {\n                // Update angular from our control\n                this.propagateChange(value);\n                this.angularValue = value;\n            }\n        }\n        else {\n            if (value !== this.angularValue && this.propagateChange !== undefined && value !== undefined) {\n                // While reset form using reset() method ng-dirty not get updated, so while value is empty just update angularValue only\n                if (value !== '' && value !== null) {\n                    // Update angular from our control\n                    this.propagateChange(value);\n                    this.angularValue = value;\n                }\n                else {\n                    //tslint:disable-next-line\n                    var optionalValue = value;\n                    this.propagateChange(optionalValue);\n                    this.angularValue = value;\n                }\n            }\n        }\n    };\n    FormBase.prototype.registerOnChange = function (registerFunction) {\n        this.propagateChange = registerFunction;\n    };\n    FormBase.prototype.registerOnTouched = function (registerFunction) {\n        this.propagateTouch = registerFunction;\n    };\n    FormBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = this.oldValue || getValue(prop, this.properties);\n        var ele = this.inputElement || this.element;\n        if (oldVal === newVal &&\n            (ele.value === undefined || ele.value === '')) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    // tslint:disable-next-line:no-any\n    FormBase.prototype.ngAfterViewInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempFormAfterViewThis = isTempRef || this;\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        // Removed setTimeout, Because we have called markForCheck() method in Angular Template Compiler\n        // setTimeout(() => {\n        /* istanbul ignore else */\n        if (typeof window !== 'undefined') {\n            tempFormAfterViewThis.appendTo(tempFormAfterViewThis.element);\n            var ele = tempFormAfterViewThis.inputElement || tempFormAfterViewThis.element;\n            ele.addEventListener('focus', tempFormAfterViewThis.ngOnFocus.bind(tempFormAfterViewThis));\n            ele.addEventListener('blur', tempFormAfterViewThis.ngOnBlur.bind(tempFormAfterViewThis));\n        }\n        // });\n    };\n    FormBase.prototype.setDisabledState = function (disabled) {\n        this.enabled = !disabled;\n        this.disabled = disabled;\n    };\n    FormBase.prototype.writeValue = function (value) {\n        var regExp = /ejs-radiobutton/g;\n        //update control value from angular\n        if (this.checked === undefined) {\n            this.value = value;\n        }\n        else {\n            // To resolve boolean type formControl value is not working for radio button control.\n            /* istanbul ignore next */\n            if (typeof value === 'boolean') {\n                if (this.ngEle && regExp.test(this.ngEle.nativeElement.outerHTML)) {\n                    this.checked = value === this.value;\n                }\n                else {\n                    this.checked = value;\n                }\n            }\n            else {\n                this.checked = value === this.value;\n            }\n        }\n        this.angularValue = value;\n        if (value === null) {\n            return;\n        }\n        this.isUpdated = true;\n        // When binding Html textbox value to syncfusion textbox, change event triggered dynamically.\n        // To prevent change event, trigger change in component side based on `preventChange` value\n        this.preventChange = true;\n    };\n    FormBase.prototype.ngOnFocus = function (e) {\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.focus.emit(e);\n        }\n    };\n    FormBase.prototype.ngOnBlur = function (e) {\n        this.propagateTouch();\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.blur.emit(e);\n        }\n    };\n    FormBase.isFormBase = true;\n    return FormBase;\n}());\nexport { FormBase };\n"],"names":["applyMixins","derivedClass","baseClass","forEach","Object","getOwnPropertyNames","prototype","name","hasOwnProperty","isFormBase","ComponentMixins","registerEvents","eventList","obj","direct","ngEventsEmitter","length","_i","eventList_1","event_1","propCollection","EventEmitter","setProperties","clearTemplate","_this","templateNames","index","regTemplates","keys","registeredTemplate","regProperties","filter","val","test","_a","e","m","template","rootNodes","rt","destroy","_b","_c","destroyed","_view","pNode","renderer","parentNode","isNullOrUndefined","appendChild","_d","_e","tagObjects","tagObject","instance","RegExp","setValue","nameSpace","value","object","replace","split","fromObj","i","key","undefined","compile","templateEle","helper","stringCompiler","contRef_1","elementRef","nativeElement","_viewContainerRef","pName_1","propName","data","component","context","$implicit","conRef","viewContainerRef","viewRef","createEmbeddedView","markForCheck","viewCollection","getValue","push","Template","defaultValue","target","propertyDescriptor","set","setter","get","getter","enumerable","configurable","defineProperty","this","saveChanges","dataBind","ComplexBase","hasChanges","dataSource","tags","ngOnInit","tag","objInstance","substring","toUpperCase","templateProperties","templateProperties_1","propList","directivePropList","k","dirPropName","indexOf","ngOnChanges","changes","changedVal","currentValue","isUpdated","getProperties","isChanged","result","property","tempProps","props","d","propVal","item","ngAfterContentChecked","templateProperties_2","ej2Base","ngAfterViewChecked","ArrayBase","propertyName","list","isInitChanges","ngAfterContentInit","children","map","child","dirIndex","onlyProp","isSourceChanged","childrenDataSource","JSON","stringify","hasNewChildren","ngAfterViewInit","ComponentBase","isProtectedOnChange","newValue","oldValue","oldProperties","changedProperties","finalUpdate","changeTime","setTimeout","bind","clearUpdate","clearTimeout","isTempRef","tempOnThis","ngBoundedEvents","isAngular","complexTemplate","ngAttr","getAngularAttr","element","createElement","tagName","prop","ele","srenderer","innerHTML","className","id","styles","setAttribute","attrs","attributes","complexTemplates","complexTemplates_1","ngAr","tempAfterViewThis","ngEle","outerHTML","style","visibility","window","appendTo","ngOnDestroy","tempOnDestroyThis","classList","contains","tempAfterContentThis","isUndefined","propObj","complexDirProps","moduleName","getModuleName","skip","compDirPropList","h","complexPropName","childObj","innerchildObj","j","innerTag","innerchildTag","curIndex","curChild","twoWaySetter","newVal","oldVal","properties","emit","addTwoWay","this_1","propList_1","addEventListener","eventName","handler","eventObj","Map","subscribe","removeEventListener","unsubscribe","trigger","eventArgs","success","prevDetection","next","localEventObj","charAt","slice","call","FormBase","propagateChange","_","propagateTouch","localChange","checked","objCheck","isObject","angularValue","duplicateValue","duplicateAngularValue","optionalValue","registerOnChange","registerFunction","registerOnTouched","inputElement","tempFormAfterViewThis","ngOnFocus","ngOnBlur","setDisabledState","disabled","enabled","writeValue","regExp","preventChange","skipFromEvent","focus","blur","getTemplateEngine","setTemplateEngine"],"mappings":"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"}